{
  "swagger": "2.0",
  "info": {
    "description": "The documents for myxxjs save mini program api",
    "version": "1.0.0",
    "title": "Logistic mini program api doc",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "View source at github",
      "url": "https://github.com/maguon/log_records"
    }
  },
  "host": "stg.myxxjs.com:9101",
  "basePath": "/api",
  "tags": [
    {
      "name": "wechat",
      "description": "wechat open api",
      "externalDocs": {
        "url" : "stg.myxxjs.com:9101",
        "description": " log mini program api"
      }
    },
    {
      "name": "inquiryCar",
      "description": "inquiryCar of log api"
    },
    {
      "name": "inquiryBank",
      "description": "inquiryBank of log api"
    },
    {
      "name": "payment",
      "description": "payment of log api"
    },
    {
      "name": "admin",
      "description": "admin of log api"
    },
    {
      "name": "order",
      "description": "order of log api"
    },
    {
      "name": "orderItem",
      "description": "orderItem of log api"
    },
    {
      "name": "invoiceApply",
      "description": "invoiceApply of log api"
    },
    {
      "name": "userInvoice",
      "description": "userInvoice of log api"
    },
    {
      "name": "user",
      "description": "User of log api"
    },
    {
      "name": "city",
      "description":"city of log api"
    },
    {
      "name": "route",
      "description":"route of log api"
    },
    {
      "name": "inquiry",
      "description":"inquiry of log api"
    },{
      "name": "userAddress",
      "description":"userAddress of log api"
    },
    {
      "name": "address",
      "description":"address of log api"
    },
    {
      "name": "addressContact",
      "description":"addressContact of log api"
    },
    {
      "name": "supplier",
      "description":"supplier of log api"
    },
    {
      "name": "supplierBank",
      "description":"supplierBank of log api"
    },
    {
      "name": "supplierContact",
      "description":"supplierContact of log api"
    },
    {
      "name": "transAndInsurePrice",
      "description":"transAndInsurePrice of log api"
    },
    {
      "name": "accountConfirmEmail",
      "description":"accountConfirmEmail of log api"
    },
    {
      "name": "statisticsMsg",
      "description":"statisticsMsg of log api"
    },
    {
      "name": "departmentManage",
      "description":"departmentManage of log api"
    },
    {
      "name": "companyBank",
      "description":"companyBank of log api"
    },
    {
      "name": "NoRouteInquiryManage",
      "description":"NoRouteInquiryManage of log api"
    },
    {
      "name": "requireTask",
      "description":"requireTask of log api"
    }
  ],
  "schemes": [
    "http"
  ],

  "paths": {
    "/admin/{adminId}/companyBank": {
      "post": {
        "tags": [
          "companyBank"
        ],
        "summary": "insert",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "bankMsg",
            "in": "body",
            "description": "bankMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/companyBankMsg"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/companyBank/{companyBankId}": {
      "put": {
        "tags": [
          "companyBank"
        ],
        "summary": "update",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyBankId",
            "in": "path",
            "description": "companyBankId",
            "required": true,
            "type": "string"
          },
          {
            "name": "bankMsg",
            "in": "body",
            "description": "bankMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/companyBankMsg"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}/companyBank/{companyBankId}/status/{status}": {
      "put": {
        "tags": [
          "companyBank"
        ],
        "summary": "update",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "companyBankId",
            "in": "path",
            "description": "companyBankId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "0:启用，1:禁用",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/companyBank": {
      "get": {
        "tags": [
          "companyBank"
        ],
        "summary": "select",
        "description": "",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [

        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/wechat/{code}/openid": {
      "get": {
        "tags": [
          "wechat"
        ],
        "summary": "select",
        "description": "",
        "operationId": "wechat login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "wechat",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/createAdmin": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "insert",
        "description": "createAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createAdmin",
            "in": "body",
            "description": "createAdmin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/createAdmin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/do/login": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "login",
        "description": "",
        "operationId": "admin login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Admin base info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminDoLogin"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/admin/{adminId}": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update",
        "description": "update admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "admin",
            "in": "body",
            "description": "admin base info:name,phone and remark is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/admin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "insert",
        "description": "insert adminUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "adminUserMsg",
            "in": "body",
            "description": "adminUserMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/adminUser": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "select",
        "description": "Get admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "query",
            "description": "admin Id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "realName",
            "in": "query",
            "description": "realName",
            "required": false,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "query",
            "description": "0:女 1:男",
            "required": false,
            "type": "integer"
          },
          {
            "name": "department",
            "in": "query",
            "description": "department",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0-停用,1-可用)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "isSuperUserFlag",
            "in": "query",
            "description": "状态(0-否,1-是)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/password": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update",
        "description": "update admin user password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "password",
            "in": "body",
            "description": "admin base info:origin and new password is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/status/{status}": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "update",
        "description": "update admin user status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "状态(0-停用,1-可用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "select",
        "description": "query user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "wechatAccount",
            "in": "query",
            "description": "wechatAccount",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "user name",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "user phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "wechatStatus",
            "in": "query",
            "description": "user wechatStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "user createdOnStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "user createdOnEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authStartTime",
            "in": "query",
            "description": "user authStartTime",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authEndTime",
            "in": "query",
            "description": "user authEndTime",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authStatus",
            "in": "query",
            "description": "authStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "select",
        "description": "query user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "wechatName",
            "in": "query",
            "description": "wechatName",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "user name",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "user phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "wechatStatus",
            "in": "query",
            "description": "user wechatStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "user createdOnStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "user createdOnEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authStartTime",
            "in": "query",
            "description": "user authStartTime",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authEndTime",
            "in": "query",
            "description": "user authEndTime",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authStatus",
            "in": "query",
            "description": "authStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user login",
        "description": "user login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "user update",
        "description": "user update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user update",
            "required": true,
            "type": "integer"
          },
          {
            "name": "updateUser",
            "in": "body",
            "description": "user info",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/updateUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{id}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update",
        "description": "user update password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user info",
            "required": true,
            "type": "integer"
          },
          {
            "name": "password",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/user/{id}/wechatStatus/{wechatStatus}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update",
        "description": "user update status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "wechatStatus",
            "in": "path",
            "description": "wechatStatus",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/wechatStatus"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/phone/{phone}/code/{code}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update",
        "description": "user update phone",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "phone",
            "in": "path",
            "description": "user phone",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/phone"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/userInfo": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update",
        "description": "user update info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user info",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/transAndInsurePrice": {
      "post": {
        "tags": [
          "transAndInsurePrice"
        ],
        "summary": "select",
        "description": "find transAndInsurePrice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transAndInsurePrice",
            "in": "body",
            "description": "transAndInsurePrice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transAndInsurePrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/transAndInsurePrice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/phone/{phone}/userPhoneSms": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "insert",
        "description": "userPhoneSms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user info",
            "required": true,
            "type": "integer"
          },
          {
            "name": "phone",
            "in": "path",
            "description": "user phone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/phone"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/wechatBindPhone": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "update",
        "description": "bind phone",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user info",
            "required": true,
            "type": "integer"
          },
          {
            "name": "msg",
            "in": "body",
            "description": "wechat binding phone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wechatBindPhone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/phone"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/inquiry": {
      "get": {
        "tags": [
          "inquiry"
        ],
        "summary": "select",
        "description": "query by user id look and inquiryId inquiry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "query",
            "description": "inquiryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serviceType",
            "in": "query",
            "description": "serviceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "modelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "oldCar",
            "in": "query",
            "description": "oldCar",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeStart",
            "in": "query",
            "description": "routeStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeEnd",
            "in": "query",
            "description": "routeEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "startCity",
            "in": "query",
            "description": "startCity",
            "required": false,
            "type": "string"
          },
          {
            "name": "endCity",
            "in": "query",
            "description": "endCity",
            "required": false,
            "type": "string"
          },
          {
            "name": "startCityId",
            "in": "query",
            "description": "startCityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "endCityId",
            "in": "query",
            "description": "endCityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryTimeStart",
            "in": "query",
            "description": "inquiryTimeStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryTimeEnd",
            "in": "query",
            "description": "inquiryTimeEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiryCar": {
      "get": {
        "tags": [
          "inquiryCar"
        ],
        "summary": "select",
        "description": " query routeId id look car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "query",
            "description": "inquiryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryCarId",
            "in": "query",
            "description": "inquiryCarId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiry/{inquiryId}/inquiryCar": {
      "post": {
        "tags": [
          "inquiryCar"
        ],
        "summary": "insert",
        "description": " query routeId id look car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryCar",
            "in": "body",
            "description": "inquiryCar",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiryCar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryCar"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiryCar/{inquiryCarId}/status": {
      "put": {
        "tags": [
          "inquiryCar"
        ],
        "summary": "update",
        "description": " delete inquiry car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryCarId",
            "in": "path",
            "description": "inquiryCarId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryCar"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/orderItem/{orderItemId}/actFeeAndSafePrice": {
      "put": {
        "tags": [
          "orderItem"
        ],
        "summary": "update",
        "description": " query routeId id look car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemId",
            "in": "path",
            "description": "orderItemId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "actFeeAndSafePrice",
            "in": "body",
            "description": "actFeeAndSafePrice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/actFeeAndSafePrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/actFeeAndSafePrice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/orderItem/{orderItemId}/orderItemInfo": {
      "put": {
        "tags": [
          "orderItem"
        ],
        "summary": " update",
        "description": " query routeId id look car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemId",
            "in": "path",
            "description": "orderItemId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemInfo",
            "in": "body",
            "description": "orderItemInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderItemInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderItemInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/inquiryCar": {
      "get": {
        "tags": [
          "inquiryCar"
        ],
        "summary": "select",
        "description": " query routeId id look car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "query",
            "description": "inquiryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryCarId",
            "in": "query",
            "description": "inquiryCarId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "select",
        "description": " query by routeId id look order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "query",
            "description": "inquiryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "startCityId",
            "in": "query",
            "description": "startCityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "endCityId",
            "in": "query",
            "description": "endCityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serviceType",
            "in": "query",
            "description": "serviceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdType",
            "in": "query",
            "description": "createdType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "statusList",
            "in": "query",
            "description": "statusList",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "logStatus",
            "in": "query",
            "description": "logStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOnStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOnEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "insert",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderNew",
            "in": "body",
            "description": "orderNew",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderNew"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryManage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "get": {
        "tags": [
          "order"
        ],
        "summary": "select",
        "description": " query by routeId id look order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "query",
            "description": "inquiryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "realName",
            "in": "query",
            "description": "realName",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "startCityId",
            "in": "query",
            "description": "startCityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "endCityId",
            "in": "query",
            "description": "endCityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serviceType",
            "in": "query",
            "description": "serviceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdType",
            "in": "query",
            "description": "createdType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "logStatus",
            "in": "query",
            "description": "logStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOnStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOnEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/inquiry/{inquiryId}/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "insert",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryManage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/inquiry/{inquiryId}/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "insert",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryManage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/inquiryBank": {
      "get": {
        "tags": [
          "inquiryBank"
        ],
        "summary": "select",
        "description": " query by user id look bank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryBankId",
            "in": "query",
            "description": "inquiryBankId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryBank"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiryBank": {
      "get": {
        "tags": [
          "inquiryBank"
        ],
        "summary": "select",
        "description": " query by user id look bank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryBankId",
            "in": "query",
            "description": "inquiryBankId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "post": {
        "tags": [
          "inquiryBank"
        ],
        "summary": "insert",
        "description": " add by user id look bank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryBank",
            "in": "body",
            "description": "inquiryBank",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiryBank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryBank"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/inquiryBank/{inquiryBankId}/status/{status}": {
      "put": {
        "tags": [
          "inquiryBank"
        ],
        "summary": "update",
        "description": " query by user id look bank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryBankId",
            "in": "path",
            "description": "inquiryBankId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryBank"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/inquiryBank/{userBankId}": {
      "delete": {
        "tags": [
          "inquiryBank"
        ],
        "summary": " delete",
        "description": " delete a bank msg by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userBankId",
            "in": "path",
            "description": "userBankId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/invoice": {
      "get": {
        "tags": [
          "userInvoice"
        ],
        "summary": "select",
        "description": " query by user id look invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryInvoiceId",
            "in": "query",
            "description": "inquiryInvoiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "companyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxNumber",
            "in": "query",
            "description": "taxNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/noInvoiceOrderList": {
      "get": {
        "tags": [
          "invoiceApply"
        ],
        "summary": "select",
        "description": " get no invoiced list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "起始城市",
            "required": false,
            "type": "string"
          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "目的城市",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "支付状态",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "创建时间（始）",
            "required": false,
            "type": "string"
          },{
            "name": "createdOnEnd",
            "in": "query",
            "description": "创建时间（终）",
            "required": false,
            "type": "string"
          },
          {
            "name": "createOrderUser",
            "in": "query",
            "description": "创建人",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/invoicesList": {
      "get": {
        "tags": [
          "invoiceApply"
        ],
        "summary": "select",
        "description": " get invoice apply list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "query",
            "description": "invoiceApplyId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "taxNumber",
            "in": "query",
            "description": "taxNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "title",
            "required": false,
            "type": "string"
          },
          {
            "name": "createOrderUser",
            "in": "query",
            "description": "createOrderUser",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoiceApplyTimeStart",
            "in": "query",
            "description": "申请时间（始）",
            "required": false,
            "type": "string"
          },{
            "name": "invoiceApplyTimeEnd",
            "in": "query",
            "description": "申请时间（终）",
            "required": false,
            "type": "string"
          },{
            "name": "invoicedTimeStart",
            "in": "query",
            "description": "开票时间（始）",
            "required": false,
            "type": "string"
          },{
            "name": "invoicedTimeEnd",
            "in": "query",
            "description": "开票时间（终）",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoiceStatus",
            "in": "query",
            "description": "invoiceStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/noInvoiceOrderList": {
      "get": {
        "tags": [
          "invoiceApply"
        ],
        "summary": "select",
        "description": " get no invoiced list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/invoicesList": {
      "get": {
        "tags": [
          "invoiceApply"
        ],
        "summary": "select",
        "description": " get invoice apply list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/invoice": {
      "get": {
        "tags": [
          "userInvoice"
        ],
        "summary": "select",
        "description": " query by user id look invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryInvoiceId",
            "in": "query",
            "description": "inquiryInvoiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "companyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "taxNumber",
            "in": "query",
            "description": "taxNumber",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "delete": {
        "tags": [
          "userInvoice"
        ],
        "summary": " delete",
        "description": " delete a user invoiceMsg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userInvoiceId",
            "in": "query",
            "description": "userInvoiceId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "post": {
        "tags": [
          "userInvoice"
        ],
        "summary": "insert",
        "description": " add by user id look invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryInvoice",
            "in": "body",
            "description": "inquiryInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiryInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/invoice/{userInvoiceId}": {
      "put": {
        "tags": [
          "userInvoice"
        ],
        "summary": " update",
        "description": " update user invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userInvoiceId",
            "in": "path",
            "description": "userInvoiceId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceMsg",
            "in": "body",
            "description": "invoiceMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/invoiceMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/invoice/{userInvoiceId}/defaultInvoice": {
      "put": {
        "tags": [
          "userInvoice"
        ],
        "summary": " update",
        "description": " update status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userInvoiceId",
            "in": "path",
            "description": "userInvoiceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/controlInvoices/{invoiceApplyId}/Invoiced": {
      "put": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " update",
        "description": " Confirm that the invoice has been issued",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/invoiceApply": {
      "post": {
        "tags": [
          "invoiceApply"
        ],
        "summary": "insert",
        "description": "admin apply an order invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "applyMsg",
            "in": "body",
            "description": "applyMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/invoiceApply"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/invoiceApply"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/invoiceApply": {
      "post": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " insert",
        "description": "user apply an order invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "applyMsg",
            "in": "body",
            "description": "applyMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/invoiceApply"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/invoiceApply"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/controlInvoices/{invoiceApplyId}/replaceOrder/{orderId}": {
      "put": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " update",
        "description": " Fill in the order number",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/controlInvoices/{invoiceApplyId}/updateInvoiceMsg": {
      "put": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " update",
        "description": " update Invoice msg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceMsg",
            "in": "body",
            "description": "invoiceMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateInvoiceMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/controlInvoices/{invoiceApplyId}/invoiceMsg": {
      "put": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " update",
        "description": " update Invoice msg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceMsg",
            "in": "body",
            "description": "invoiceMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateInvoiceMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/controlInvoices/{invoiceApplyId}/revokeInvoice": {
      "delete": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " delete",
        "description": " 撤销发票",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/controlInvoices/{invoiceApplyId}/revokeInvoice": {
      "delete": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " delete",
        "description": " 撤销发票",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/controlInvoices/{invoiceApplyId}/refuseApply": {
      "put": {
        "tags": [
          "invoiceApply"
        ],
        "summary": " update",
        "description": " 驳回发票申请",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "invoiceApplyId",
            "in": "path",
            "description": "发票编号",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refuseApplyMsg",
            "in": "body",
            "description": "驳回原因",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refuseApplyMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryInvoice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiry": {
      "get": {
        "tags": [
          "inquiry"
        ],
        "summary": "select",
        "description": "query by user id look and inquiryId inquiry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "query",
            "description": "inquiryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serviceType",
            "in": "query",
            "description": "serviceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "modelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "oldCar",
            "in": "query",
            "description": "oldCar",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeStart",
            "in": "query",
            "description": "routeStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeEnd",
            "in": "query",
            "description": "routeEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "statusList",
            "in": "query",
            "description": "statusList",
            "required": false,
            "type": "string"
          },
          {
            "name": "startCity",
            "in": "query",
            "description": "startCity",
            "required": false,
            "type": "string"
          },
          {
            "name": "endCity",
            "in": "query",
            "description": "endCity",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "inquiryTimeStart",
            "in": "query",
            "description": "inquiryTimeStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "inquiryTimeEnd",
            "in": "query",
            "description": "inquiryTimeEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryUser"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "inquiry"
        ],
        "summary": "insert",
        "description": "inquiry add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiry",
            "in": "body",
            "description": "inquiry info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiry"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/inquiry/{inquiryId}/cancel": {
      "put": {
        "tags": [
          "inquiry"
        ],
        "summary": "update",
        "description": "inquiryManage update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryStatus",
            "in": "body",
            "description": "inquiryStatus",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiryStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/cancel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiry/{inquiryId}/cancel": {
      "put": {
        "tags": [
          "inquiry"
        ],
        "summary": "update",
        "description": "inquiryManage update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/cancel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/inquiry/{inquiryId}/inquiryStatus/{status}": {
      "put": {
        "tags": [
          "inquiry"
        ],
        "summary": "update",
        "description": "inquiryManage update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryManage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/inquiry/{inquiryId}/inquiryStatus/{status}": {
      "put": {
        "tags": [
          "inquiry"
        ],
        "summary": "update",
        "description": "inquiryManage update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryManage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/inquiry/{inquiryId}/feePrice": {
      "put": {
        "tags": [
          "inquiry"
        ],
        "summary": "update",
        "description": "inquiry update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryId",
            "in": "path",
            "description": "inquiryId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "feePrice",
            "in": "body",
            "description": "feePrice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/feePrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiry"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/oraPrice": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "update",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryManageOrder",
            "in": "body",
            "description": "inquiryManageOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiryManageOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryManage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/receiveInfo": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "update",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "receiveInfo",
            "in": "body",
            "description": "receiveInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/receiveInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/sendInfo": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sendInfo",
            "in": "body",
            "description": "sendInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/sendInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/totalTransInsurePrice": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "totalTransInsurePrice",
            "in": "body",
            "description": "totalTransInsurePrice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/totalTransInsurePrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/cancel": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderCancel",
            "in": "body",
            "description": "orderCancel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderCancel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderCancel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/cancel": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderCancel",
            "in": "body",
            "description": "orderCancel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderCancel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/status/{status}": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/remark": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "update",
        "description": "update remark",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "remark",
            "in": "body",
            "description": "remark",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderRemark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/sendMsg": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "update",
        "description": "update sendMsg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sendMsg",
            "in": "body",
            "description": "sendMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderSendMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/recvMsg": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "update",
        "description": "update recvMsg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "recvMsg",
            "in": "body",
            "description": "recvMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderReceiveMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/status/{status}": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receiveInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/car": {
      "post": {
        "tags": [
          "orderItem"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "carInfo",
            "in": "body",
            "description": "carInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/carAdmin": {
      "post": {
        "tags": [
          "orderItem"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "carAdmin",
            "in": "body",
            "description": "carAdmin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carAdmin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/orderItem": {
      "get": {
        "tags": [
          "orderItem"
        ],
        "summary": " query by routeId look order",
        "description": " query by routeId id look order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderItemId",
            "in": "query",
            "description": "orderItemId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderItem"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/orderItem/{orderItemId}/updateCarType": {
      "put": {
        "tags": [
          "orderItem"
        ],
        "summary": " updateCarType ",
        "description": " update car modelType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderItemId",
            "in": "path",
            "description": "orderItemId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "carMsg",
            "in": "body",
            "description": "carMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMsgOfOrderItem"
            }
          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderItem"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/orderItem": {
      "get": {
        "tags": [
          "orderItem"
        ],
        "summary": " query by routeId look order",
        "description": " query by routeId id look order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderItemId",
            "in": "query",
            "description": "orderItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderItem"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/orderItem/{orderItemId}": {
      "delete": {
        "tags": [
          "orderItem"
        ],
        "summary": " query by routeId look order",
        "description": " query by routeId id look order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemId",
            "in": "path",
            "description": "orderItemId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderItem"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/orderItem/{orderItemId}": {
      "delete": {
        "tags": [
          "orderItem"
        ],
        "summary": " query by routeId look order",
        "description": " query by routeId id look order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemId",
            "in": "path",
            "description": "orderItemId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/orderItem"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/adminMark": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "inquiryManageOrder query by inquiryManageId",
        "description": "inquiryManageOrder query by inquiryManageId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "adminMark",
            "in": "body",
            "description": "adminMark",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminMark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/adminMark"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/paymentRemark": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "update paymentRemark in an order",
        "description": "update paymentRemark in an order",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentRemark",
            "in": "body",
            "description": "paymentRemark",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentRemark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/adminMark"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/city": {
      "post": {
        "tags": [
          "city"
        ],
        "summary": "city add",
        "description": "city add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "get": {
        "tags": [
          "city"
        ],
        "summary": "city query",
        "description": "city query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "cityId",
            "in": "query",
            "description": "cityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cityName",
            "in": "query",
            "description": "city info",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "city info",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "city info",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/city": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "city query",
        "description": "city query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "cityId",
            "in": "query",
            "description": "cityId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cityName",
            "in": "query",
            "description": "city info",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "city info",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "city info",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "city"
        ],
        "summary": "city add",
        "description": "city add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/city/{cityId}": {
      "put": {
        "tags": [
          "city"
        ],
        "summary": "city update",
        "description": "city update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "cityId",
            "in": "path",
            "description": "cityId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/route": {
      "get": {
        "tags": [
          "route"
        ],
        "summary": "route query",
        "description": "route query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "routeId",
            "in": "query",
            "description": "routeId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStartId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEndId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/route"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/route": {
      "post": {
        "tags": [
          "route"
        ],
        "summary": "route add",
        "description": "route add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "route",
            "in": "body",
            "description": "route",
            "required": true,
            "schema": {
              "$ref": "#/definitions/route"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/route"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/route/{routeId}": {
      "put": {
        "tags": [
          "route"
        ],
        "summary": "route update",
        "description": "route update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "routeId",
            "in": "path",
            "description": "routeId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "route",
            "in": "body",
            "description": "route",
            "required": true,
            "schema": {
              "$ref": "#/definitions/route"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/route"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier": {
      "post": {
        "tags": [
          "supplier"
        ],
        "summary": "supplier add",
        "description": "supplier add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplier",
            "in": "body",
            "description": "supplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "get": {
        "tags": [
          "supplier"
        ],
        "summary": "supplier query",
        "description": "supplier query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierShort",
            "in": "query",
            "description": "supplierShort",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplierFull",
            "in": "query",
            "description": "supplierFull",
            "required": false,
            "type": "string"
          },
          {
            "name": "transType",
            "in": "query",
            "description": "transType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/supplierInfo": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "supplier update",
        "description": "supplier update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplier",
            "in": "body",
            "description": "supplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/advancedSetting": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "update",
        "description": "supplier update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "setting",
            "in": "body",
            "description": "setting",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplierSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/closeFlag/{closeFlag}": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "update",
        "description": "supplier update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "closeFlag",
            "in": "path",
            "description": "1:关闭高级设置 0:打开高级设置",
            "required": true,
            "type":"integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplier"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/bank": {
      "post": {
        "tags": [
          "supplierBank"
        ],
        "summary": "supplierBank add",
        "description": "supplierBank add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierBank",
            "in": "body",
            "description": "supplierBank",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplierBank"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierBank"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "get": {
        "tags": [
          "supplierBank"
        ],
        "summary": "supplierBank query",
        "description": "supplierBank query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bank",
            "in": "query",
            "description": "bank",
            "required": false,
            "type": "string"
          },
          {
            "name": "bankCode",
            "in": "query",
            "description": "bankCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierBank"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/bank/{bankId}": {
      "delete": {
        "tags": [
          "supplierBank"
        ],
        "summary": "supplierBank del",
        "description": "supplierBank del",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierBankDel",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bankId",
            "in": "path",
            "description": "bankId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierBankDel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/contact": {
      "post": {
        "tags": [
          "supplierContact"
        ],
        "summary": "supplierContact add",
        "description": "supplierContact add",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierContact",
            "in": "body",
            "description": "supplierContact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/supplierContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierContact"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "get": {
        "tags": [
          "supplierContact"
        ],
        "summary": "supplierContact query",
        "description": "supplierContact query",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "position",
            "in": "query",
            "description": "position",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierContact"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/supplier/{supplierId}/contact/{ContactId}": {
      "delete": {
        "tags": [
          "supplierContact"
        ],
        "summary": "supplierContact del",
        "description": "supplierContact del",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "contactId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierContactDel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/userAddress": {
      "get": {
        "tags": [
          "userAddress"
        ],
        "summary": "get userAddress",
        "description": "get userAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "addressId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userAddress"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/userAddress": {
      "get": {
        "tags": [
          "userAddress"
        ],
        "summary": "get userAddress",
        "description": "get userAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "addressId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userAddress"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "userAddress"
        ],
        "summary": "get userAddress",
        "description": "get userAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userAddress",
            "in": "body",
            "description": "userAddress",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userAddress"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/userAddress/{addressId}/status": {
      "put": {
        "tags": [
          "userAddress"
        ],
        "summary": "put userAddress",
        "description": "put userAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "addressId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userAddress"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/userAddress/{addressId}/address": {
      "put": {
        "tags": [
          "userAddress"
        ],
        "summary": "put userAddress",
        "description": "put userAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "addressId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userAddressInfo",
            "in": "body",
            "description": "userAddressInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAddressInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userAddress"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/userAddress/{addressId}": {
      "delete": {
        "tags": [
          "userAddress"
        ],
        "summary": "del userAddress",
        "description": "del userAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "addressId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userAddress"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/address": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "get address",
        "description": "get address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "city",
            "required": false,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "addressId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/address"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "address"
        ],
        "summary": "add address",
        "description": "add address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressAdmin",
            "in": "body",
            "description": "addressAdmin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addressAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressAdmin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/addressContact": {
      "get": {
        "tags": [
          "addressContact"
        ],
        "summary": "get address",
        "description": "get address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "addressId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "addressContactId",
            "in": "query",
            "description": "addressContactId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressContact"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/addressContact": {
      "get": {
        "tags": [
          "addressContact"
        ],
        "summary": "get address",
        "description": "get address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "addressId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "addressContactId",
            "in": "query",
            "description": "addressContactId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressContact"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "addressContact"
        ],
        "summary": "add address",
        "description": "add address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressContactAdmin",
            "in": "body",
            "description": "addressContactAdmin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addressContactAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressContactAdmin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/addressContact/{addressContactId}": {
      "delete": {
        "tags": [
          "addressContact"
        ],
        "summary": "get address",
        "description": "get address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressContactId",
            "in": "path",
            "description": "addressContactId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressContact"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/address": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "get address",
        "description": "get address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "city",
            "required": false,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "query",
            "description": "addressId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierContactDel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "post": {
        "tags": [
          "address"
        ],
        "summary": "add address",
        "description": "add address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "address",
            "in": "body",
            "description": "address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/supplierContactDel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/address/{addressId}/status/{status}": {
      "put": {
        "tags": [
          "address"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "addressId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/address"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/inquiryCar/{inquiryCarId}/inquiryCarInfo": {
      "put": {
        "tags": [
          "inquiryCar"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryCarId",
            "in": "path",
            "description": "inquiryCarId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "inquiryCarInfo",
            "in": "body",
            "description": "inquiryCarInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inquiryCarInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/inquiryCarInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/address/{addressId}/addressInfo": {
      "put": {
        "tags": [
          "address"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "addressId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressInfo",
            "in": "body",
            "description": "addressInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addressInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressInfo"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/address/{addressId}/addressByAdmin": {
      "put": {
        "tags": [
          "address"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "addressId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "addressByAdmin",
            "in": "body",
            "description": "addressByAdmin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addressByAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/addressByAdmin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/payment": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "get payment",
        "description": "get payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "order Id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type 0退款1支付",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status 0未完成1已完成",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentType",
            "in": "query",
            "description": "payment_type 1微信支付2··",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOnStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOnEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/paymentStat": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "get payment",
        "description": "get payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "user Id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "order Id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "description": "userName",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type 0退款1支付",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status 0未完成1已完成",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentType",
            "in": "query",
            "description": "payment_type 1微信支付2··",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOnStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOnEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/payment": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "get payment",
        "description": "get payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "user Id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "order Id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentType",
            "in": "query",
            "description": "1:微信;2:银行转账",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type 0退款1支付",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status 0未完成1已完成",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createOrderUser",
            "in": "query",
            "description": "订单创建人",
            "required": false,
            "type": "string"
          },
          {
            "name": "bank",
            "in": "query",
            "description": "bank",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountUser",
            "in": "query",
            "description": "accountUser",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "格式：2018-09-23",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "格式：2018-09-23",
            "required": false,
            "type": "string"
          },

          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/paymentRefund": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "get payment",
        "description": "get payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/payment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/wechatPayment": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "wechatPayment",
            "in": "body",
            "description": "wechatPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wechatPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/wechatPayment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/payment/{paymentId}/refundStatus": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "put status",
        "description": "put status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankStatus"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/payment/{paymentId}/paymentReview": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "updateAmount",
        "description": "updateAmount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentReview",
            "in": "body",
            "description": "paymentReview",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentReview"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankStatus"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/bankPayment": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bankPayment",
            "in": "body",
            "description": "bankPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankPayment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/bankPayment": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bankPayment",
            "in": "body",
            "description": "bankPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankPayment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/bankPayment/{paymentId}": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "put address",
        "description": "update to be confirmed payment msg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bankPayment",
            "in": "body",
            "description": "bankPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankPayment"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/payment/{paymentId}/bankRefund": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "put address",
        "description": "put address",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bankRefund",
            "in": "body",
            "description": "bankRefund",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankRefund"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/payment/{paymentId}/refundApply": {
      "post": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApply",
            "in": "body",
            "description": "refundApply",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refundApply"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/payment/{paymentId}/refundApply": {
      "post": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApply",
            "in": "body",
            "description": "refundApply",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refundApply"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/payment/{paymentId}/refundApply/{refundId}": {
      "put": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "update refundApply by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundId",
            "in": "path",
            "description": "refundId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApply",
            "in": "body",
            "description": "refundApply",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refundApply"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/payment/{paymentId}/refundApply/{refundId}": {
      "put": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "update refundApply by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundId",
            "in": "path",
            "description": "refundId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApply",
            "in": "body",
            "description": "refundApply",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refundApply"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/payment/{paymentId}/deleteRefundApply/{refundApplyId}": {
      "delete": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "delete a refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "path",
            "description": "refundApplyId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/payment/{paymentId}/refundApply/{refundApplyId}": {
      "delete": {
        "tags": [
          "refundApply"
        ],
        "summary": "delete",
        "description": "delete a refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "path",
            "description": "refundApplyId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/refundApply/{refundApplyId}": {
      "put": {
        "tags": [
          "refundApply"
        ],
        "summary": "update",
        "description": "update a refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "path",
            "description": "refundApplyId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApplyMsg",
            "in": "body",
            "description": "refundApplyMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refundApplyMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/refundApply": {
      "get": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "query",
            "description": "refundApplyId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/refundApply": {
      "get": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "get refundApply list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "query",
            "description": "refundApplyId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "订单类型",
            "required": false,
            "type": "integer"
          },
          {
            "name": "refundMethod",
            "in": "query",
            "description": "退款方式",
            "required": false,
            "type": "integer"
          },
          {
            "name": "createOrderUser",
            "in": "query",
            "description": "订单创建人",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "申请时间(始)格式：2018-09-23",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "申请时间(终)",
            "required": false,
            "type": "string"
          },
          {
            "name": "updateOnStart",
            "in": "query",
            "description": "处理时间(始)格式：2018-09-23",
            "required": false,
            "type": "string"
          },
          {
            "name": "updateOnEnd",
            "in": "query",
            "description": "处理时间(终)",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/refundApplyStat": {
      "get": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "query",
            "description": "paymentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "query",
            "description": "refundApplyId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/bankRefund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/payment/{paymentId}/refundApply/{refundApplyId}/refuse": {
      "put": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "refuse with refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "path",
            "description": "refundApplyId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refuseMsg",
            "in": "body",
            "description": "refuseStatus",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refuseStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/refuseStatus"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/payment/{paymentId}/refundApply/{refundApplyId}/agree": {
      "put": {
        "tags": [
          "refundApply"
        ],
        "summary": "refundApply",
        "description": "agree with refundApply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refundApplyId",
            "in": "path",
            "description": "refundApplyId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "agreeMsg",
            "in": "body",
            "description": "refundStatus",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refundStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/refundStatus"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/user/{userId}/order/{orderId}/wechatRefund": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "refund",
        "description": "refund",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "order Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "refund",
            "in": "body",
            "description": "refund",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refund"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/refund"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/payment/{paymentId}/paymentRemark": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "payment",
        "description": "payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentRemark",
            "in": "body",
            "description": "paymentRemark",
            "required": true,
            "schema": {
              "$ref": "#/definitions/paymentRemark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/paymentRemark"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/payment/{paymentId}/RefundRemark": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "payment",
        "description": "payment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "RefundRemark",
            "in": "body",
            "description": "RefundRemark",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefundRemark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/RefundRemark"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/payment/{paymentId}": {
      "delete": {
        "tags": [
          "payment"
        ],
        "summary": "delete",
        "description": "delete a payment msg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/RefundRemark"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/payment/{paymentId}/bankInfo": {
      "put": {
        "tags": [
          "payment"
        ],
        "summary": "update",
        "description": "update bank msg and totalFee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "paymentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bankInfo",
            "in": "body",
            "description": "bankInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bankInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/RefundRemark"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/accountConfirmEmail": {
      "post": {
        "tags": [
          "accountConfirmEmail"
        ],
        "summary": "accountConfirmEmail",
        "description": "accountConfirmEmail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountConfirmEmail",
            "in": "body",
            "description": "accountConfirmEmail",
            "required": false,
            "schema": {
              "$ref": "#/definitions/accountConfirmEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/email"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/queryMailRecord": {
      "get": {
        "tags": [
          "accountConfirmEmail"
        ],
        "summary": "accountConfirmEmail queryMailRecord",
        "description": "accountConfirmEmail queryMailRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "accountConfirmEmailStart",
            "in": "query",
            "description": "accountConfirmEmailStart",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountConfirmEmailEnd",
            "in": "query",
            "description": "accountConfirmEmailEnd",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/queryMailRecord"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsOrderMsgByMonth": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "通过月份统计订单笔数和金额（日期默认当前月份-12个月前）",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsOrderMsgByDay": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "统计每天的订单笔数和金额(近30天或10天内)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "selectDays",
            "in": "query",
            "description": "近30天:30 ;近10天:10",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsInvoiceMsgByMonth": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "通过月份统计发票笔数和金额（日期默认当前月份-12个月前）",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsInvoiceMsgByDay": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "统计每天的发票笔数和金额(近30天或10天内)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "selectDays",
            "in": "query",
            "description": "近30天:30 ;近10天:10",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsRefundPriceByMonth": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "通过月份统计退款金额（日期默认当前月份-12个月前）",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsRefundPriceByDay": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "统计每天的退款金额(近30天或10天内)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "selectDays",
            "in": "query",
            "description": "近30天:30 ;近10天:10",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsInquiryCountByMonth": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "按月统计询价订单数（日期默认当前月份-12个月前）",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsInquiryCountByDay": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "按天统计询价订单数(近30天或10天内)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "selectDays",
            "in": "query",
            "description": "近30天:30 ;近10天:10",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsNewUserByMonth": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "按月统计新增用户数（日期默认当前月份-12个月前）",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsNewUserByDay": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "按天统计新增用户数(近30天或10天内)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "selectDays",
            "in": "query",
            "description": "近30天:30 ;近10天:10",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsPaymentPriceByMonth": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "按月统计支付金额（日期默认当前月份-12个月前）",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "in": "query",
            "description": "格式：201612",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/statisticsPaymentPriceByDay": {
      "get": {
        "tags": [
          "statisticsMsg"
        ],
        "summary": "",
        "description": "按天统计支付金额(近30天或10天内)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "selectDays",
            "in": "query",
            "description": "近30天:30 ;近10天:10",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/department": {
      "post": {
        "tags": [
          "departmentManage"
        ],
        "summary": "add",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "departmentMsg",
            "in": "body",
            "description": "departmentMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/departmentMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      },
      "get": {
        "tags": [
          "departmentManage"
        ],
        "summary": "get",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "departmentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/department/{departmentId}": {
      "put": {
        "tags": [
          "departmentManage"
        ],
        "summary": "update",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "departmentId",
            "in": "path",
            "description": "departmentId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "departmentMsg",
            "in": "body",
            "description": "departmentName",
            "required": true,
            "schema":{
              "$ref":"#/definitions/departmentMsg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/user/{userId}/noRouteInquiryInfo": {
      "post": {
        "tags": [
          "NoRouteInquiryManage"
        ],
        "summary": "insert",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "noRouteInquiryInfo",
            "in": "body",
            "description": "noRouteInquiryInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/noRouteInquiryInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/{adminId}/order/{orderId}/requireTask": {
      "post": {
        "tags": [
          "requireTask"
        ],
        "summary": "insert",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "adminId",
            "required": true,
            "type": "integer"
          },{
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "requireMsg",
            "in": "body",
            "description": "requireMsg",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requireTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/statisticsMsg"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    }
  },
  "definitions": {
    "requireTask": {
      "type": "object",
      "properties": {
        "routeStart": {
          "type": "string"
        },
        "routeEnd": {
          "type": "string"
        },
        "routeStartId": {
          "type": "string"
        },
        "routeEndId": {
          "type": "string"
        },
        "carNum": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "requireTask"
      }
    },
    "createAdmin": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "createAdmin"
      }
    },
    "admin": {
      "type": "object",
      "required": [
        "id",
        "userName",
        "password"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "realName": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "department": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "admin"
      }
    },
    "adminPassword": {
      "type": "object",
      "required": [
        "originPassword",
        "newPassword"
      ],
      "properties": {
        "originPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "adminPassword"
      }
    },
    "userLogin": {
      "type": "object",
      "properties": {
        "wechatName": {
          "type": "string"
        },
        "wechatId": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "avatar": {
          "type": "string"
        }
      },
      "xml": {
        "name": "userLogin"
      }
    },
    "updateUser": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "updateUser"
      }
    },
    "password": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "password"
      }
    },
    "accountConfirmEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "accountConfirmEmail"
      }
    },
    "city": {
      "type": "object",
      "properties": {
        "cityName": {
          "type": "string"
        },
        "cityPinYin": {
          "type": "string"
        },
        "cityPY": {
          "type": "string"
        }
      },
      "xml": {
        "name": "city"
      }
    },
    "route": {
      "type": "object",
      "properties": {
        "routeStartId": {
          "type": "integer"
        },
        "routeStart": {
          "type": "string"
        },
        "routeEndId": {
          "type": "integer"
        },
        "routeEnd": {
          "type": "string"
        },
        "distance": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "route"
      }
    },
    "inquiry": {
      "type": "object",
      "properties": {
        "routeId": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        },
        "carInfo": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/inquiryCarInfo"
          }
        },
        "inquiryName": {
          "type": "string"
        },
        "startCity": {
          "type": "string"
        },
        "endCity": {
          "type": "string"
        },
        "startId": {
          "type": "integer"
        },
        "endId": {
          "type": "integer"
        },
        "distance": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "inquiry"
      }
    },
    "inquiryManageOrder": {
      "type": "object",
      "properties": {
        "oraTransPrice": {
          "type": "integer"
        },
        "oraInsurePrice": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "inquiryManageOrder"
      }
    },
    "orderCancel": {
      "type": "object",
      "properties": {
        "cancelMark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "orderCancel"
      }
    },
    "supplier": {
      "type": "object",
      "properties": {
        "supplierShort": {
          "type": "string"
        },
        "supplierFull": {
          "type": "string"
        },
        "transType": {
          "type": "integer"
        },
        "mark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "supplier"
      }
    },
    "supplierBank": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "supplierBank"
      }
    },
    "supplierContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "supplierContact"
      }
    },
    "wechat": {
      "type": "object",
      "properties": {
        "totalFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "wechat"
      }
    },
    "userInfo": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "birth": {
          "type": "string"
        },
        "avatar": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "userInfo"
      }
    },
    "receiveInfo": {
      "type": "object",
      "properties": {
        "recvName": {
          "type": "string"
        },
        "recvPhone": {
          "type": "string"
        },
        "recvAddress": {
          "type": "string"
        }
      },
      "xml": {
        "name": "receiveInfo"
      }
    },
    "sendInfo": {
      "type": "object",
      "properties": {
        "sendName": {
          "type": "string"
        },
        "sendPhone": {
          "type": "string"
        },
        "sendAddress": {
          "type": "string"
        }
      },
      "xml": {
        "name": "sendInfo"
      }
    },
    "carInfo": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "brandType": {
          "type": "string"
        },
        "vin": {
          "type": "string"
        },
        "modelType": {
          "type": "integer"
        },
        "oldCar": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "distance": {
          "type": "integer"
        },
        "safeStatus": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "carInfo"
      }
    },
    "carAdmin": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "brandType": {
          "type": "string"
        },
        "vin": {
          "type": "string"
        },
        "modelType": {
          "type": "integer"
        },
        "oldCar": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "safeStatus": {
          "type": "integer"
        },
        "actTransPrice": {
          "type": "integer"
        },
        "actInsurePrice": {
          "type": "integer"
        },
        "distance": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "carAdmin"
      }
    },
    "orderMark": {
      "type": "object",
      "properties": {
        "mark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "orderMark"
      }
    },
    "adminMark": {
      "type": "object",
      "properties": {
        "adminMark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "adminMark"
      }
    },
    "inquiryCar": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "integer"
        },
        "oldCar": {
          "type": "integer"
        },
        "plan": {
          "type": "integer"
        },
        "carNum": {
          "type": "integer"
        },
        "safeStatus": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "inquiryCar"
      }
    },
    "feePrice": {
      "type": "object",
      "properties": {
        "totalTransPrice": {
          "type": "integer"
        },
        "totalInsurePrice": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "feePrice"
      }
    },
    "address": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "integer"
        },
        "mark": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "address"
      }
    },
    "addressContactAdmin": {
      "type": "object",
      "properties": {
        "addressId": {
          "type": "integer"
        },
        "userName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "position": {
          "type": "string"
        }
      },
      "xml": {
        "name": "addressContactAdmin"
      }
    },
    "addressAdmin": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "integer"
        },
        "mark": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        },
        "lon": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "addressAdmin"
      }
    },
    "addressInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "integer"
        },
        "mark": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "addressInfo"
      }
    },
    "addressByAdmin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "integer"
        },
        "mark": {
          "type": "string"
        },
        "lon": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "addressByAdmin"
      }
    },
    "inquiryStatus": {
      "type": "object",
      "properties": {
        "markReason": {
          "type": "string"
        }
      },
      "xml": {
        "name": "inquiryStatus"
      }
    },
    "inquiryBank": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "inquiryBank"
      }
    },
    "inquiryInvoice": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string"
        },
        "taxNumber": {
          "type": "string"
        },
        "companyAddress": {
          "type": "string"
        },
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "inquiryInvoice"
      }
    },
    "refund": {
      "type": "object",
      "properties": {
        "refundFee": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "refund"
      }
    },
    "wechatPayment": {
      "type": "object",
      "properties": {
        "openid": {
          "type": "string"
        },
        "totalFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "wechatPayment"
      }
    },
    "bankPayment": {
      "type": "object",
      "properties": {
        "remark": {
          "type": "string"
        },
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "totalFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "bankPayment"
      }
    },
    "bankRefund": {
      "type": "object",
      "properties": {
        "remark": {
          "type": "string"
        },
        "totalFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "bankRefund"
      }
    },
    "inquiryCarInfo": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "integer"
        },
        "oldCar": {
          "type": "integer"
        },
        "plan": {
          "type": "integer"
        },
        "carNum": {
          "type": "integer"
        },
        "safeStatus": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "inquiryCarInfo"
      }
    },
    "actFeeAndSafePrice": {
      "type": "object",
      "properties": {
        "actFee": {
          "type": "integer"
        },
        "safePrice": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "actFeeAndSafePrice"
      }
    },
    "orderItemInfo": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "brandType": {
          "type": "string"
        },
        "vin": {
          "type": "string"
        },
        "modelType": {
          "type": "integer"
        },
        "oldCar": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "actTransPrice": {
          "type": "integer"
        },
        "safeStatus": {
          "type": "integer"
        },
        "actInsurePrice": {
          "type": "integer"
        },
        "distance": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "orderItemInfo"
      }
    },
    "paymentRemark": {
      "type": "object",
      "properties": {
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "paymentRemark"
      }
    },
    "RefundRemark": {
      "type": "object",
      "properties": {
        "refundRemark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RefundRemark"
      }
    },
    "orderNew": {
      "type": "object",
      "properties": {
        "routeStartId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "orderNew"
      }
    },
    "totalTransInsurePrice": {
      "type": "object",
      "properties": {
        "feePrice": {
          "type": "integer"
        },
        "totalInsurePrice": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "totalTransInsurePrice"
      }
    },
    "transAndInsurePrice": {
      "type": "object",
      "properties": {
        "distance": {
          "type": "integer"
        },
        "modelType": {
          "type": "integer"
        },
        "oldCar": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "safeStatus": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "transAndInsurePrice"
      }
    },
    "userAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "detailAddress": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "userAddress"
      }
    },
    "userAddressInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "detailAddress": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "userAddressInfo"
      }
    },
    "refundApply": {
      "type": "object",
      "properties": {
        "mark": {
          "type": "string"
        },
        "applyFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "refundApply"
      }
    },
    "refuseStatus": {
      "type": "object",
      "properties": {
        "refuseReason": {
          "type": "string"
        }
      },
      "xml": {
        "name": "refuseStatus"
      }
    },
    "refundStatus": {
      "type": "object",
      "properties": {
        "refundFee": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "refundStatus"
      }
    },
    "paymentReview": {
      "type": "object",
      "properties": {
        "totalFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "paymentReview"
      }
    },
    "invoiceApply": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "taxNumber": {
          "type": "string"
        },
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        },
        "companyAddress": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "invoiceApply"
      }
    },
    "carMsgOfOrderItem": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "brandType": {
          "type": "string"
        },
        "modelType": {
          "type": "integer"
        },
        "vin": {
          "type": "string"
        },
        "oldCar": {
          "type": "integer"
        },
        "valuation": {
          "type": "string"
        },
        "safeStatus": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "carMsgOfOrderItem"
      }
    },
    "updateInvoiceMsg": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "taxNumber": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        },
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "companyAddress": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "updateInvoiceMsg"
      }
    },
    "refuseApplyMsg": {
      "type": "object",
      "properties": {
        "refuseReason": {
          "type": "string"
        }
      },
      "xml": {
        "name": "refuseApplyMsg"
      }
    },
    "orderRemark": {
      "type": "object",
      "properties": {
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "orderRemark"
      }
    },
    "orderSendMsg": {
      "type": "object",
      "properties": {
        "sendName": {
          "type": "string"
        },
        "sendPhone": {
          "type": "string"
        },
        "sendAddress": {
          "type": "string"
        }
      },
      "xml": {
        "name": "orderSendMsg"
      }
    },
    "orderReceiveMsg": {
      "type": "object",
      "properties": {
        "recvName": {
          "type": "string"
        },
        "recvPhone": {
          "type": "string"
        },
        "recvAddress": {
          "type": "string"
        }
      },
      "xml": {
        "name": "orderReceiveMsg"
      }
    },
    "bankInfo": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "totalFee": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "bankInfo"
      }
    },
    "invoiceMsg": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "taxNumber": {
          "type": "string"
        },
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "companyAddress": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "invoiceMsg"
      }
    },
    "refundApplyMsg": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "integer"
        },
        "applyFee": {
          "type": "integer"
        },
        "applyReason": {
          "type": "string"
        }
      },
      "xml": {
        "name": "refundApplyMsg"
      }
    },
    "departmentMsg": {
      "type": "object",
      "properties": {
        "departmentName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "departmentMsg"
      }
    },
    "companyBankMsg": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "bankCode": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "companyBankMsg"
      }
    },
    "noRouteInquiryInfo": {
      "type": "object",
      "properties": {
        "routeId": {
          "type": "integer"
        },
        "startCity": {
          "type": "string"
        },
        "endCity": {
          "type": "string"
        },
        "startId": {
          "type": "integer"
        },
        "endId": {
          "type": "integer"
        },
        "serviceType": {
          "type": "integer"
        },
        "oldCarFlag": {
          "type": "integer"
        },
        "carNum": {
          "type": "integer"
        },
        "valuation": {
          "type": "integer"
        },
        "carModelType": {
          "type": "integer"
        },
        "carInsureFlag": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "noRouteInquiryInfo"
      }
    },
    "adminUser": {
      "type": "object",
      "properties": {
        "realName": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "department": {
          "type": "integer"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "adminUser"
      }
    },
    "wechatBindPhone": {
      "type": "object",
      "properties": {
        "sessionKey": {
          "type": "string"
        },
        "iv": {
          "type": "string"
        },
        "encryptedData": {
          "type": "string"
        }
      },
      "xml": {
        "name": "wechatBindPhone"
      }
    },
    "adminDoLogin": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "createAdmin"
      }
    },
    "supplierSetting": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "integer"
        },
        "appUrl": {
          "type": "string"
        },
        "appSecret": {
          "type": "string"
        },
        "baseAddrId": {
          "type": "integer"
        },
        "receiveId": {
          "type": "integer"
        },
        "carModuleId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "supplierSetting"
      }
    }
  }
}